plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.example'
version = '0.0.1-beta'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
spotless {
	java {
		googleJavaFormat("$googleJavaFormatVersion")
		// 아래 순서로 import문 정렬
		importOrder('java', 'javax', 'jakarta', 'org', 'com')
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 각 라인 끝에 있는 공백을 제거
		trimTrailingWhitespace()
		// 파일 끝에 새로운 라인 추가
		endWithNewline()
	}
}

ext.googleJavaFormatVersion = "1.18.1"

tasks.register('updateGitHooks', Copy) {
	from 'scripts/pre-commit'
	into '.git/hooks'
}

tasks.register('makeGitHooksExecutable', Exec) {
	onlyIf {
		file('.git/hooks/pre-commit').exists()
	}

	commandLine 'sh', '-c', 'chmod +x ./gradlew && chmod +x .git/hooks/pre-commit'
	dependsOn 'updateGitHooks'
}

tasks.named('compileJava') {
	dependsOn 'makeGitHooksExecutable'
}
